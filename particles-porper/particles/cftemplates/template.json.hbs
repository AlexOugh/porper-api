{{#layout}}

  {{
     parameter "m:core" "base"
     logicalId="StageName"
     type="String"
     description="Deployment stage name"
  }}

  {{resource "lambda_function" logicalId="LambdaFunction"}}
  {{resource "lambda_execution_role" logicalId="LambdaExecutionRole"}}

  {{resource "m:api-gateway" "invoke_function_role" logicalId="InvokeFunctionRole"}}

  {{#resource logicalId="RestApi"}}
    "Type" : "AWS::ApiGateway::RestApi",
    "Properties" : {
      "Description" : "Porper API",
      "Name" : "Porper-API"
    }
  {{/resource}}

  {{#resource logicalId="PorperRes"}}
    "Type": "AWS::CloudFormation::Stack",
    "Properties": {
      "TemplateURL": "{{templateS3Url 'api.template.json'}}",
      "Parameters": {
        "RestApiId": { "Ref": "RestApi" },
        "ParentResourceId": { "Fn::GetAtt": ["RestApi", "RootResourceId"] },
        "LambdaArn": { "Fn::GetAtt": ["LambdaFunction", "Arn"] },
        "InvokeFunctionRoleArn": { "Fn::GetAtt": ["InvokeFunctionRole", "Arn"] }
      }
    }
  {{/resource}}

  {{#resource logicalId="ApiDeployment"}}
    "DependsOn": "PorperRes",
    "Type" : "AWS::ApiGateway::Deployment",
    "Properties" : {
      "RestApiId": { "Ref": "RestApi" },
      "Description": "Stage Deployment",
      "StageName": { "Ref": "StageName" }
    }
  {{/resource}}

  {{output "api_uri" logicalId="APIUri"}}

{{/layout}}
